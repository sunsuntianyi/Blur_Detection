Index: create_validation_data.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- create_validation_data.py	(revision e86687af19007aa8f690d376493d6b6efc4a9fe0)
+++ create_validation_data.py	(date 1529633417000)
@@ -12,6 +12,7 @@
     :param: data_dir:     path where you want to put your folder
     :param: folder_name:  name of the folder you want to create
     """
+    # create folder if the folder does not exist
     if not os.path.exists(data_dir + '/' + folder_name):
         os.makedirs(data_dir + '/' + folder_name)
     else:
@@ -35,7 +36,7 @@
 
     # move the randomly selected file from train_dir to val_dir
     for i in range(len(val_list)):
-        # break to prevent repetitive user run
+        # break to prevent repetitive user run in future
         if len(os.listdir(val_dir)) <= portion * len(os.listdir(train_dir)):
             shutil.move(val_list[i], val_dir + '/')
         else:
@@ -55,25 +56,25 @@
                   folder_name='malignant')
 
     # folder path
-    train_data_path_class_0 = '/home/tianyi/Desktop/skin/train/benign'
-    val_data_path_class_0 = '/home/tianyi/Desktop/skin/validate/benign'
+    train_folder_dir_class_0 = '/home/tianyi/Desktop/skin/train/benign'
+    validation_folder_dir_class_0 = '/home/tianyi/Desktop/skin/validate/benign'
 
-    train_data_path_class_1 = '/home/tianyi/Desktop/skin/train/malignant'
-    val_data_path_class_1 = '/home/tianyi/Desktop/skin/validate/malignant'
+    train_folder_dir_class_1 = '/home/tianyi/Desktop/skin/train/malignant'
+    validation_folder_dir_class_1 = '/home/tianyi/Desktop/skin/validate/malignant'
 
     # standardize file name is both training class_0 and 1 folder
     standardize_file_name(cls=0,
-                          folder_dir=train_data_path_class_0,
+                          folder_dir=train_folder_dir_class_0,
                           file_format=".jpg")
     standardize_file_name(cls=1,
-                          folder_dir=train_data_path_class_1,
+                          folder_dir=train_folder_dir_class_1,
                           file_format=".jpg")
 
     # split class_0 training data
-    split_and_move_training_data(train_dir=train_data_path_class_0,
-                                 val_dir=val_data_path_class_0,
+    split_and_move_training_data(train_dir=train_folder_dir_class_0,
+                                 val_dir=validation_folder_dir_class_0,
                                  portion=0.4)
     # split class_1 training data
-    split_and_move_training_data(train_dir=train_data_path_class_1,
-                                 val_dir=val_data_path_class_1,
+    split_and_move_training_data(train_dir=train_folder_dir_class_1,
+                                 val_dir=validation_folder_dir_class_1,
                                  portion=0.4)
Index: load_images.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- load_images.py	(revision e86687af19007aa8f690d376493d6b6efc4a9fe0)
+++ load_images.py	(date 1529631486000)
@@ -49,7 +49,7 @@
     # create an empty list to store file_name
     folder_class_0 = folder_class_0 + '/'
     folder_class_1 = folder_class_1 + '/'
-    # file_name_0, file_name_1, file_name = list()
+    # create empty lists
     img_mat_class_0, img_mat_class_1, img_mat_all = [], [], []
     img_name_class_0, img_name_class_1, img_name_all = [], [], []
     image_path_class_0, image_path_class_1, image_path_all = [], [], []
Index: run.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- run.py	(date 1529634119000)
+++ run.py	(date 1529634119000)
@@ -0,0 +1,90 @@
+import create_validation_data
+import load_images
+import read_tfrecord
+import tensorflow as tf
+import matplotlib.pyplot as plt
+
+
+def main(
+        tra_folder='/home/tianyi/Desktop/skin/train',
+        val_folder='/home/tianyi/Desktop/skin/validate',
+
+        train_folder_dir_class_0='/home/tianyi/Desktop/skin/train/benign',
+        train_folder_dir_class_1='/home/tianyi/Desktop/skin/train/malignant',
+
+        validation_folder_dir_class_0='/home/tianyi/Desktop/skin/validate/benign',
+        validation_folder_dir_class_1='/home/tianyi/Desktop/skin/validate/malignant',
+
+        tfrecord_dir='/home/tianyi/Desktop/skin/train/training.tfrecords'
+
+):
+    # split class_0 training data
+    create_validation_data.split_and_move_training_data(train_dir=train_folder_dir_class_0,
+                                                        val_dir=validation_folder_dir_class_0,
+                                                        portion=0.4)
+    # split class_1 training data
+    create_validation_data.split_and_move_training_data(train_dir=train_folder_dir_class_1,
+                                                        val_dir=validation_folder_dir_class_1,
+                                                        portion=0.4)
+
+    # create validation class_0 and class_1 sub-folder
+    create_validation_data.create_folder(data_dir=val_folder,
+                                         folder_name='benign')
+    create_validation_data.create_folder(data_dir=val_folder,
+                                         folder_name='malignant')
+
+    # standardize train and validation images of both classes
+    load_images.standardize_file_name(cls=0,
+                                      folder_dir=train_folder_dir_class_0,
+                                      file_format=".jpg")
+    load_images.standardize_file_name(cls=1,
+                                      folder_dir=train_folder_dir_class_1,
+                                      file_format=".jpg")
+
+    load_images.standardize_file_name(cls=0,
+                                      folder_dir=validation_folder_dir_class_0,
+                                      file_format=".jpg")
+    load_images.standardize_file_name(cls=1,
+                                      folder_dir=validation_folder_dir_class_1,
+                                      file_format=".jpg")
+
+    # create TFRecord file for training set
+    tra_img_name_all,\
+        tra_img_mat_all,\
+        tra_img_path_all,\
+        tra_lbls = \
+        load_images.load_images_and_label_from_folder(
+            folder_class_0=train_folder_dir_class_0,
+            folder_class_1=train_folder_dir_class_1)
+
+    load_images.create_tfrecord(folder_path=tra_folder,
+                                mode='training',
+                                path=tra_img_path_all,
+                                labels=tra_lbls)
+
+    # create TFRecord file for validation set
+    val_img_name_all,\
+        val_img_mat_all,\
+        val_img_path_all,\
+        val_lbls = \
+        load_images.load_images_and_label_from_folder(
+            folder_class_0=validation_folder_dir_class_0,
+            folder_class_1=validation_folder_dir_class_1)
+
+    load_images.create_tfrecord(folder_path=val_folder,
+                                mode='validation',
+                                path=val_img_path_all,
+                                labels=val_lbls)
+
+    image_pixel = 300
+
+    images, labels = read_tfrecord.read_tfrecord(tfrecord_path=tfrecord_dir,
+                                                 pixel=image_pixel)
+
+    print(tf.one_hot(labels, 2))
+    # test to see if the module is correctly defined by reading an image
+    j = 200
+    plt.imshow(images[j])
+    plt.title('benign' if labels[j] == 0 else 'malignant')
+
+
